name: "Build"

on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches:
      - main

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true


defaults:
  run:
    shell: bash


jobs:

  compile:
    name: "Compile"
    strategy:
      matrix:
        export: [web, windows, mac]
        include:
          - export: web
            output: index.html
            os: ubuntu-latest
          - export: windows
            output: game.exe
            os: windows-latest
          - export: mac
            output: game.dmg
            os: macos-latest
    runs-on: ${{ matrix.os}}
    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
      -
        name: ü§ñ Setup Godot
        uses: chickensoft-games/setup-godot@v1
        with:
          use-dotnet: false
          version: 4.1.1
      -
        name: ü§ñ Setup Project
        run: |
          mkdir -p Build/${{ matrix.export }}
          chmod +x *.sh
          ./setup-git-version.sh
      -
        name: üî¨ Verify Setup
        run: |
          cat git_info.gd
          godot --version
      -
        name: ü¶∫ Build Export
        run: |
          godot --headless --verbose --export-release "${{ matrix.export }}" ./Build/${{ matrix.export }}/${{ matrix.output }}
      -
        name: üî¨ Verify Files
        run: |
          ls -la ./Build/${{ matrix.export }}
      -
        name: üìÅ Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.export }}-v${{ github.run_number }}
          path: ./Build/${{ matrix.export }}/*
      -
        name: üìÅ Upload Distribution info
        uses: actions/upload-artifact@v3
        with:
          name: DistInfo
          path: ./Distribution/*

  publish:
    name: "Publish"
    needs: compile
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: [html5, windows, mac]
        include:
          -
            channel: html5
            export: web
          -
            channel: windows
            export: windows
          -
            channel: mac
            export: mac
    steps:
      -
        name: üìÅ Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.export }}-v${{ github.run_number }}
      -
        name: üìÅ Download Distribution Info
        uses: actions/download-artifact@v3
        with:
          name: DistInfo
      -
        name: üî¨ Verify Files
        run: |
          ls -la .
      -
        name: ü§ñ Publish
        uses: KikimoraGames/itch-publish@v0.0.3
        with:
          gameData: .
          itchUsername: ${{ secrets.ITCH_USERNAME }}
          itchGameId: ${{ secrets.ITCH_GAME_ID }}
          butlerApiKey: ${{ secrets.ITCH_API_KEY }}
          buildChannel: ${{ matrix.channel }}
          buildNumber: ${{ github.run_number }}
